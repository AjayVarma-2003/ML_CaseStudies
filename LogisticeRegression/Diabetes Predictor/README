This project demonstrates an end to end machine learning pipeline for predicting Diabetes
using diabetes.csv

It follows industrial best pracitices by :
    1. Automating preprocessing with pipelines
    2. Handling missing or garbage values if any.
    3. Using Logistic regression classifier as robust baseline.
    4. Saving and loading trained model using joblib.
    5. Providing data visualization.

Dependencies :-
    Install the required python packages before running the project:
        pip install pandas, numpy, matplotlib, scikit-learn, joblib

Dataset Information :-
    Features(8) :-
        1. Pregnancies
        2. Glucose
        3. BloodPressure
        4. SkinThickness
        5. Insulin
        6. BMI
        7. DiabetesPedigreeFunction
        8. Age
    Target(Outcome) :-
        1. 0 = Dibetic
        2. 1 = Non Diabetic

Workflow :-
    Data Preparation :-
        1. If dataset is in .raw format then convert to .csv with headers.
        2. Replace missing values if any.
        3. Ensure numeric type conversion for all feature columns.
    Train-Test split :-
        1. Split into 80% train and 20% test.
    Pipeline Construction :-
        1. Step 1 = Use standard scalar for standardizing feature values.
        2. Step 2 = LogisticRegression with max iteraion of 1000.
    Model Training and Evaluation :-
        1. Metrics - accuracy score, confusion matrix, classification report
        2. Used to calculate accuracy of model.
    Model Saving and Loading :-
        1. Save the model with Joblib.
        2. Load model for future predictions without retraining.

Running the project :-
    1. Prepare CSV and load CSV
    2. Train and Evaluate Model
        Training accuracy of model is :  77.0358306188925
        Testing accuracy of model is :  75.32467532467533
        Classification report of model is : 
                      precision    recall  f1-score   support
        
                   0       0.81      0.80      0.81        99
                   1       0.65      0.67      0.66        55
        
            accuracy                           0.75       154
           macro avg       0.73      0.74      0.73       154
        weighted avg       0.76      0.75      0.75       154
        
        Confusion matrix of model is : 
        [[79 20]
         [18 37]]

    3. Visualization :-
        1> Confusion matrix with Matplotlib
    4. Model Storage :-
        1> model saved as DiabetesPredictorLogistic.joblib
        2> Can be loaded anytime for predection without retraining.

Sample Prediction :-
    sample = X_test.iloc[[0]]
    pred = model.predict(sample)
    print("Prediction is : ", pred[0])

Author :-
    Ajay Yogesh Varma
